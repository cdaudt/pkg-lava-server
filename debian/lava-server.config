#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule
db_version 2.0

# This conf script is capable of backing up
db_capb backup

# if there is existing config for worker
if [ -f /etc/lava-server/instance.conf -a -f /etc/lava-server/worker.conf ]; then
	. /etc/lava-server/instance.conf
	db_set lava-server/master 'false'
	if [ "$LAVA_INSTANCE" != 'default' ]; then
		db_set lava-worker/master-instance-name "$LAVA_INSTANCE"
	fi
	if [ "$LAVA_DB_NAME" != '$LAVA_DB_NAME' ]; then
		db_set lava-worker/db-name "$LAVA_DB_NAME"
	fi
	if [ "$LAVA_DB_USER" != '$LAVA_DB_USER' ]; then
		db_set lava-worker/db-user "$LAVA_DB_USER"
	fi
	if [ "$LAVA_DB_PASSWORD" != '$LAVA_DB_PASSWORD' ]; then
		db_set lava-worker/db-pass "$LAVA_DB_PASSWORD"
	fi
	if [ "$LAVA_DB_SERVER" != '$LAVA_DB_SERVER' ]; then
		db_set lava-worker/db-server "$LAVA_DB_SERVER"
	fi
	if [ "$LAVA_DB_PORT" != '$LAVA_DB_PORT' ]; then
		db_set lava-worker/db-port "$LAVA_DB_PORT"
	fi
	if [ "$LAVA_DB_SERVER" != '$LAVA_DB_SERVER' ]; then
		db_set lava-worker/db-server "$LAVA_DB_SERVER"
	fi
	exit
fi

# if there is existing config for master
if [ -f /etc/lava-server/instance.conf ]; then
	. /etc/lava-server/instance.conf
	db_set lava-server/master 'true'
	if [ "$LAVA_INSTANCE" != 'default' ]; then
		db_set lava-server/instance-name "$LAVA_INSTANCE"
	fi
	if [ "$LAVA_DB_PORT" != '$LAVA_DB_PORT' ]; then
		db_set lava-server/db-port "$LAVA_DB_PORT"
	fi
	if [ "$LAVA_DB_SERVER" != '$LAVA_DB_SERVER' ]; then
		db_set lava-server/db-server "$LAVA_DB_SERVER"
	fi
	exit
fi

# now do our config
STATE=1
while [ "$STATE" != 0 -a "$STATE" != 5 ]; do
	case "$STATE" in
	1)
		db_input high lava-server/master || true
	;;
	2)
		# Check their answer.
		db_get lava-server/master
		if [ "$RET" = "true" ]; then
			# Note that the config script is run before the package is unpacked. 
			# It should only use commands that are in essential packages 
			# Also, it shouldn't actually edit files on the system, or affect it in any other way.
			# so we check for file existence from previous installs only
			# and explicitly give no warnings if neither file exists (clean install)
			if [ -f /etc/lava-server/instance.conf -a -f /etc/lava-server/worker.conf ]; then
				# an instance existed prior to this install and it appears to be a remote worker
				db_input high lava-server/worker-note || true
			fi
			db_input high lava-server/instance-name || true
			# allow setting 5433 when postgresql has been upgraded or is running in a chroot
			db_input high lava-server/db-port || true
			db_input high lava-server/db-server || true
		else
				db_input high lava-worker/db-server || true
				db_input high lava-worker/db-name || true
				db_input high lava-worker/db-user || true
				db_input medium lava-worker/db-port || true
				db_input high lava-worker/db-pass || true
			if [ -f /etc/lava-server/instance.conf -a ! -f /etc/lava-server/worker.conf ]; then
				# an instance existed prior to this install and it appears to be a master instance
				db_input high lava-server/master-note || true
				rm -f /var/lib/lava-server/default/media/.mounted
			fi
		fi
	;;
	3)
		db_get lava-server/master
		if [ "$RET" = "true" ]; then
			db_input high lava-server/instance-name || true
		else
			db_input high lava-worker/master-instance-name || true
		fi
	;;
	4)
		# Check their answer.
		db_get lava-server/instance-name
		if [ "$RET" = "" ]; then
			db_set lava-server/instance-name default
			db_input high lava-server/missingname || true
		fi
	;;
	esac
	if db_go; then
		STATE=$(($STATE + 1))
	else
		STATE=$(($STATE - 1))
	fi
done
